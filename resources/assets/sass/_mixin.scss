@mixin trans-duration($time) {
    -webkit-transition-duration: $time;
    transition-duration: $time;
}

@mixin transform($value) {
    -webkit-transform: $value;
    transform: $value;
}

@mixin animation($value) {
    -webkit-animation: $value;
    animation: $value;
}

@mixin flex-direction($value) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

@mixin align-items($value) {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
    -ms-grid-row-align: $value;
    align-items: $value;
}

@mixin display-flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}

@mixin justify-content-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
}

@mixin justify-content-center {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
}

@mixin flex($value) {
    -webkit-box-flex: 0;
    -ms-flex: $value;
    flex: $value;
}

@mixin flex-wrap($value) {
    -ms-flex-wrap: $value;
      flex-wrap: $value;
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1)+$replace+str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (eot: "?",
        svg: "#"+ str-replace($name, " ", "_"));

    $formats: (otf: "opentype",
        ttf: "truetype"
        );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

@mixin fontFace($family, $src, $style: normal, $weight: normal) {
    @font-face {
        font-family: $family;
        src: url('#{$src}.eot'); // IE9 compat
        src: url('#{$src}.eot?#iefix') format('embedded-opentype'),
        // IE8 and below
        url('#{$src}.woff') format('woff'),
        // standards
        url('#{$src}.ttf') format('truetype'),
        // Safari, Android, iOS
        url('#{$src}.svg##{$family}') format('svg'); // legacy iOS

        font-style: $style;
        font-weight: $weight;
    }
}

